{"version":3,"sources":["components2/ui/PulsatingDot/PulsatingDot.module.css","components2/ui/Badge/Badge.module.css","components2/ui/Button/Button.module.css","components2/AirdropTokens/AirdropTokens.module.css","components2/ui/PulsatingDot/PulsatingDot.js","assets/bsc-logo.svg","assets/bsc-testnet-logo.svg","assets/polygon-logo.svg","assets/polygon-testnet-logo.svg","assets/eth-logo.svg","assets/eth-testnet-logo.svg","assets/logo.svg","components2/Menu/menuHelper.js","components2/ui/Badge/Badge.js","components2/Menu/MenuItem/MenuItem.js","components2/Menu/NetworkMenu/NetworkMenu.js","components2/Menu/Menu.js","assets/aval-logo.png","components2/ui/ToolScreen/ToolScreen.js","networks/index.js","components2/ui/Button/Button.js","components2/LiveLiquidity/LiveLiquidity.js","components2/ui/Slider/Slider.js","components2/ui/FormField/FormField.js","components2/ui/Card/Card.js","components2/ui/LoadingModal/LoadingModal.js","assets/contracts/tokens/safeMoon/SafeMoon.sol","api/BscScanApi.js","api/BlochainApi.js","assets/metamask-logo.svg","api/MetaMaskApi.js","components2/ui/NetworkSensitiveButton/NetworkSensitiveButton.js","components2/ui/Modal/Modal.js","components2/DeployNewToken/DelpoyNewToken.js","components2/TopBar/Wallet/NetworkSwitcher/NetworkButton/NetworkButton.js","components2/TopBar/Wallet/NetworkSwitcher/networkSwitcherHelper.js","components2/TopBar/Wallet/NetworkSwitcher/NetworkSwitcher.js","components2/TopBar/Wallet/Wallet.js","components2/TopBar/Prices/Prices.js","components2/TopBar/TopBar.js","components2/AirdropTokens/AirdropTokens.js","App2.js","index.js","components2/TopBar/Wallet/Wallet.module.css","components2/Menu/NetworkMenu/NetworkMenu.module.css","components2/LiveLiquidity/LiveLiquidity.module.css","components2/ui/Modal/Modal.module.css","components2/ui/ToolScreen/ToolScreen.module.css","components2/TopBar/TopBar.module.css","components2/Menu/Menu.module.css","components2/TopBar/Wallet/NetworkSwitcher/NetworkButton/NetworkButton.module.css","components2/Menu/MenuItem/MenuItem.module.css","components2/ui/FormField/FormField.module.css","components2/TopBar/Prices/Prices.module.css","components2/ui/Slider/Slider.module.css","components2/ui/Card/Card.module.css","components2/ui/LoadingModal/LoadingModal.module.css","components2/TopBar/Wallet/NetworkSwitcher/NetworkSwitcher.module.css","components2/DeployNewToken/DeployNewToken.module.css","App2.module.css"],"names":["module","exports","PulsatingDot","size","className","style","width","height","marginRight","classes","join","topMenu","icon","BiHome","url","disabled","RiCopperCoinLine","customIcon","src","Logo","info","bottomMenu","GrCircleQuestion","CgFileDocument","mainnetMenu","fullName","logo","bscLogo","items","GrDeploy","GrGift","BiDollar","IoMdLocate","BiLock","polygonLogo","ethLogo","testnetMenu","bscTestnetLogo","polygonTestnetLogo","ethTestnetLogo","Badge","title","background","color","MenuItem","itemName","itemData","onClick","history","useHistory","selected","useLocation","pathname","Selected","ItemDisabled","push","Provider","value","ItemName","NetworkMenu","networkName","networkData","opened","setOpened","Network","Opened","NetworkLogo","alt","NetworkName","Chevron","NetworkItems","Object","keys","map","screens","Menu","network","useParams","useState","useEffect","includes","onOpen","toOpen","SubMenu","networks","bsc","polygon","eth","aval","avalLogo","ToolScreen","children","description","to","Children","ScreenDescription","Top","ScreenTitle","Button","Token","row","currency","onContract","onChart","onSwap","hovered","setHovered","onMouseLeave","OnHover","Visible","tokenAddress","Created","moment","created","format","Name","tokenName","tokenSymbol","Balance","Number","liquidity","toFixed","LiveLiquidtity","data","setData","a","axios","get","livePairsUrl","reverse","fetchData","socket","io","on","newPair","old","concat","disconnect","run","explorer","blockExplorerUrls","window","open","focus","chartsProvider","chartsUrl","swapProvider","swapUrl","marginLeft","Liqs","nativeCurrency","symbol","Slider","setValue","min","max","ReactSlider","thumbClassName","Thumb","trackClassName","Track","onChange","index","marks","renderThumb","props","state","valueNow","FormField","type","label","placeholder","input","InputWrapper","Input","e","newValue","target","isNaN","FormInput","Label","Card","CardTitle","CardBody","LoadingModal","display","ModalWrapper","Modal","secondaryColor","Title","verifyContract","contractAddress","contractSource","deployData","bytecode","Promise","r","setTimeout","constructorArguements","replace","apiUrl","apiKey","guid","postData","action","sourceCode","codeformat","contractname","compilerversion","optimizationUsed","runs","bodyFormData","FormData","forEach","key","append","method","headers","res","status","result","isNotDone","checkData","verifySafeMoon","contract","address","safeMoon","deployTransaction","safeMoonBytecode","object","deployContract","abi","args","provider","providers","Web3Provider","ethereum","send","signer","getSigner","factory","ContractFactory","connectedFactory","connect","deploy","wait","deploySafeMoon","router","name","liqFee","redFee","safeMoonAbi","getMetamaskNetworkParams","networkObj","chainId","chainName","rpcUrls","changeNetwork","request","params","code","NetworkSensitiveButton","targetNetwork","useWallet","account","metamaskLogo","currentNetwork","values","find","n","targetNetworkName","body","buttonTitle","buttonIcon","buttonOnClick","Body","Description","ButtonContainer","DeployNewToken","setName","setSymbol","setLiqFee","setRedFee","createdAddress","setCreatedAddress","loadingMessage","setLoadingMessage","onDeploy","routerAddress","NetworkButton","ButtonWrapper","Big","Small","mainnets","testnets","NetworkSwitcher","onNetworkChange","onButtonClick","networkSymbol","networkUrl","Nets","networksIcons","Wallet","balance","currNetwork","setCurrNetwork","localStorage","getItem","onConnect","setItem","Left","Account","Address","substring","slice","fontWeight","Right","LeftContainer","Rounder","SwitcherContainer","displayNetworks","apiSymbol","Prices","prices","setPrices","pricesFromStorage","JSON","parse","fetchPrices","fetchedPrices","i","wethSymbol","toLowerCase","Error","oldPrices","newPrices","op","stringify","interval","setInterval","clearInterval","net","Price","TopBar","TopBarWrapper","WalletContainer","AirdropTokens","setTokenAddress","tokenLogo","setTokenLogo","tokenWebsite","setTokenWebsite","tokenMotto","setTokenMotto","App","path","Container","overflow","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3635f6fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"PulsatingDot\":\"PulsatingDot_PulsatingDot__3aEq_\",\"pulseDot\":\"PulsatingDot_pulseDot__2Hni8\",\"pulseRing\":\"PulsatingDot_pulseRing__k00f-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Badge\":\"Badge_Badge__1vsmH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2hkJT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonContainer\":\"AirdropTokens_ButtonContainer__3WTou\"};","import classes from './PulsatingDot.module.css';\n\nconst PulsatingDot = ({ size = 15, className, style }) => {\n    return (\n        <div style={{ width: size * .9, height: size * .9, marginRight: 4, ...style }} className={[classes.PulsatingDot, className].join(' ')} />\n\n    )\n}\n\nexport default PulsatingDot;","export default __webpack_public_path__ + \"static/media/bsc-logo.d8c61230.svg\";","export default __webpack_public_path__ + \"static/media/bsc-testnet-logo.ce367217.svg\";","export default __webpack_public_path__ + \"static/media/polygon-logo.97ff139c.svg\";","export default __webpack_public_path__ + \"static/media/polygon-testnet-logo.e79621c4.svg\";","export default __webpack_public_path__ + \"static/media/eth-logo.b3ec96d9.svg\";","export default __webpack_public_path__ + \"static/media/eth-testnet-logo.1bf55469.svg\";","export default __webpack_public_path__ + \"static/media/logo.9f389e71.svg\";","\n\nimport { GrDeploy, GrGift, GrCircleQuestion } from 'react-icons/gr';\nimport PulsatingDot from '../ui/PulsatingDot/PulsatingDot';\nimport { BiHome } from 'react-icons/bi';\nimport { BiLock, BiDollar } from 'react-icons/bi';\nimport { IoMdLocate } from 'react-icons/io';\nimport bscLogo from '../../assets/bsc-logo.svg';\nimport bscTestnetLogo from '../../assets/bsc-testnet-logo.svg';\nimport polygonLogo from '../../assets/polygon-logo.svg';\nimport polygonTestnetLogo from '../../assets/polygon-testnet-logo.svg';\nimport ethLogo from '../../assets/eth-logo.svg';\nimport ethTestnetLogo from '../../assets/eth-testnet-logo.svg';\nimport { RiCopperCoinLine } from 'react-icons/ri';\nimport { CgFileDocument } from 'react-icons/cg';\n\nimport Logo from '../../assets/logo.svg';\n\nexport const topMenu = {\n\n    'Dashboard': {\n        icon: BiHome,\n        url: '/dashboard',\n        disabled: false\n\n    },\n    'Token': {\n        icon: RiCopperCoinLine,\n        customIcon: <img src={Logo} />,\n        url: '/token',\n        info: 'PRESALE!'\n    },\n\n}\n\nexport const bottomMenu = {\n    \"FAQ\": {\n        icon: GrCircleQuestion,\n        url: '/faq',\n    },\n    'Docs': {\n        icon: CgFileDocument,\n        url: '/docs'\n    }\n}\n\nexport const mainnetMenu = {\n    'bsc': {\n        fullName: 'Binance Smart Chain',\n        logo: bscLogo,\n        items: {\n            'Live Liquidity': {\n                icon: PulsatingDot,\n                url: '/bsc/live-liquidity'\n            },\n            'Deploy Token': {\n                icon: GrDeploy,\n                url: '/bsc/deploy-token',\n            },\n            \"Airdrop Tokens\": {\n                icon: GrGift,\n                url: '/bsc/airdrop-tokens',\n            },\n            'Create Presale': {\n                icon: BiDollar,\n                url: '/bsc/create-presale',\n                disabled: true\n            },\n            \"Snipe Liquidity\": {\n                icon: IoMdLocate,\n                url: null,\n                disabled: true\n            },\n            \"Lock Liquidity\": {\n                icon: BiLock,\n                url: null,\n                disabled: true\n            }\n        }\n    },\n    'polygon': {\n        logo: polygonLogo,\n        fullName: 'Polygon',\n        items: {\n            'Live Liquidity': {\n                icon: PulsatingDot,\n                url: '/polygon/live-liquidity',\n            },\n            'Deploy Token': {\n                icon: GrDeploy,\n                url: '/polygon/deploy-token',\n            },\n            \"Airdrop Tokens\": {\n                icon: GrGift,\n                url: '/polygon/airdrop-tokens',\n\n            },\n            'Create Presale': {\n                icon: BiDollar,\n                url: '/polygon/create-presale',\n                disabled: true\n            },\n            \"Sniper\": {\n                icon: IoMdLocate,\n                url: null,\n                disabled: true\n            },\n            \"Lock Liquidity\": {\n                icon: BiLock,\n                url: null,\n                disabled: true\n            }\n        }\n    },\n    'eth': {\n        logo: ethLogo,\n        fullName: 'Ethereum',\n        items: {\n            'Live Liquidity': {\n                icon: PulsatingDot,\n                url: '/eth/live-liquidity',\n            },\n            'Deploy Token': {\n                icon: GrDeploy,\n                url: '/eth/deploy-token',\n            },\n            \"Airdrop Tokens\": {\n                icon: GrGift,\n                url: '/eth/airdrop-tokens',\n            },\n            'Create Presale': {\n                icon: BiDollar,\n                url: '/eth/create-presale',\n                disabled: true\n            },\n            \"Sniper\": {\n                icon: IoMdLocate,\n                url: null,\n                disabled: true\n            },\n            \"Lock Liquidity\": {\n                icon: BiLock,\n                url: null,\n                disabled: true\n            }\n\n        }\n    }\n}\n\nexport const testnetMenu = {\n    'bsc-testnet': {\n        logo: bscTestnetLogo,\n        fullName: 'BSC - Testnet',\n        items: {\n            'Deploy Token': {\n                icon: GrDeploy,\n                url: '/bsc-testnet/deploy-token',\n            },\n            \"Airdrop Tokens\": {\n                icon: GrGift,\n                url: '/bsc-testnet/airdrop-tokens',\n            },\n            'Create Presale': {\n                icon: BiDollar,\n                url: '/bsc-testnet/create-presale',\n                disabled: true\n            },\n        }\n    },\n    'polygon-testnet': {\n        logo: polygonTestnetLogo,\n        fullName: 'Mumbai',\n        items: {\n            'Deploy Token': {\n                icon: GrDeploy,\n                url: '/polygon-testnet/deploy-token',\n            },\n\n            \"Airdrop Tokens\": {\n                icon: GrGift,\n                url: '/bsc-testnet/airdrop-tokens',\n            },\n            'Create Presale': {\n                icon: BiDollar,\n                url: '/polygon-testnet/create-presale',\n                disabled: true\n            }\n        }\n    },\n    'eth-testnet': {\n        logo: ethTestnetLogo,\n        fullName: 'Ropsten',\n        items: {\n            'Deploy Token': {\n                icon: GrDeploy,\n                url: '/eth-testnet/deploy-token',\n            },\n            \"Airdrop Tokens\": {\n                icon: GrGift,\n                url: '/bsc-testnet/airdrop-tokens',\n            },\n            'Create Presale': {\n                icon: BiDollar,\n                url: '/eth-testnet/create-presale',\n                disabled: true\n            },\n\n        }\n    }\n}","import classes from './Badge.module.css';\n\nconst Badge = ({ title, background, color, style }) => (\n    <div className={classes.Badge} style={{ background, color, ...style }}>\n        {title}\n    </div>\n)\n\nexport default Badge;","import classes from './MenuItem.module.css';\nimport { IconContext } from \"react-icons\";\nimport { useHistory, useLocation } from 'react-router';\nimport Badge from '../../ui/Badge/Badge';\n\nconst MenuItem = ({ itemName, itemData, onClick }) => {\n    const history = useHistory();\n    const location = useLocation();\n\n    const onItemClick = () => {\n        if (itemData.disabled) return;\n        onClick && onClick();\n        history.push(itemData.url);\n    }\n\n    const selected = location.pathname === itemData.url;\n\n    return (\n        <div className={[classes.MenuItem, selected && classes.Selected, itemData.disabled && classes.ItemDisabled].join(' ')} onClick={onItemClick}>\n\n            <IconContext.Provider value={{ color: itemData.disabled ? '#545c66' : selected ? '#fff' : \"#ccc\" }}>\n                <itemData.icon />\n            </IconContext.Provider>\n\n            <span className={classes.ItemName}>\n                {itemName}\n                {itemData.disabled && <Badge title='COMING SOON!' background='#545c66' />}\n                {itemData.info && <Badge title={itemData.info} background='#1eb88a' />}\n            </span>\n        </div>\n    )\n}\n\nexport default MenuItem;","import classes from './NetworkMenu.module.css';\nimport { IoChevronDownOutline } from 'react-icons/io5';\nimport MenuItem from '../MenuItem/MenuItem';\n\nconst NetworkMenu = ({ networkName, networkData, opened, setOpened }) => (\n    <div className={classes.NetworkMenu}>\n        <div className={[classes.Network, opened && classes.Opened].join(' ')} onClick={() => setOpened(networkName)}>\n            <img className={classes.NetworkLogo} src={networkData.logo} alt='Logo' />\n            <div className={classes.NetworkName}>{networkData.fullName}</div>\n            <IoChevronDownOutline className={[classes.Chevron, opened && classes.Opened].join(' ')} />\n        </div>\n        <div className={[classes.NetworkItems, opened && classes.Opened].join(' ')}>\n            {\n                Object.keys(networkData.items).map(itemName => (\n                    <MenuItem key={itemName} itemName={itemName} itemData={networkData.items[itemName]} />\n                ))\n            }\n        </div>\n    </div>\n)\n\nexport default NetworkMenu;","import classes from './Menu.module.css';\nimport { useEffect, useState } from 'react';\nimport { topMenu, bottomMenu, mainnetMenu, testnetMenu } from './menuHelper';\nimport { useParams } from 'react-router-dom';\nimport NetworkMenu from './NetworkMenu/NetworkMenu';\nimport MenuItem from './MenuItem/MenuItem';\n\nconst screens = ['dashboard', 'token', 'faq', 'docs'];\n\nconst Menu = () => {\n    const { network } = useParams();\n    const [opened, setOpened] = useState();\n\n    useEffect(() => {\n        if (screens.includes(network)) return;\n\n        if (network) {\n            setOpened(network);\n        } else {\n            setOpened()\n        }\n    }, [network]);\n\n    const onOpen = (toOpen) => {\n        if (opened === toOpen) {\n            setOpened();\n        } else {\n            setOpened(toOpen);\n        }\n    }\n\n    return (\n        <div className={classes.Menu}>\n\n            <div className={classes.SubMenu}>\n                {\n                    Object.keys(topMenu).map(itemName => (\n                        <MenuItem key={itemName} itemName={itemName} itemData={topMenu[itemName]} />\n                    ))\n                }\n            </div>\n\n\n            <div className={classes.SubMenu}>\n                {\n                    Object.keys(mainnetMenu).map(networkName => (\n                        <NetworkMenu key={networkName} opened={opened === networkName} setOpened={onOpen} networkName={networkName} networkData={mainnetMenu[networkName]} />\n                    ))\n                }\n            </div>\n\n\n            <div className={classes.SubMenu}>\n                {\n                    Object.keys(testnetMenu).map(networkName => (\n                        <NetworkMenu key={networkName} opened={opened === networkName} setOpened={onOpen} networkName={networkName} networkData={testnetMenu[networkName]} />\n                    ))\n                }\n            </div>\n\n            <div className={classes.SubMenu}>\n                {\n                    Object.keys(bottomMenu).map(itemName => (\n                        <MenuItem key={itemName} itemName={itemName} itemData={bottomMenu[itemName]} />\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Menu;\n\n","export default __webpack_public_path__ + \"static/media/aval-logo.e1fb45e8.png\";","import { Redirect, useHistory, useParams } from 'react-router';\nimport classes from './ToolScreen.module.css';\nimport bscLogo from '../../../assets/bsc-logo.svg';\nimport bscTestnetLogo from '../../../assets/bsc-testnet-logo.svg';\nimport polygonLogo from '../../../assets/polygon-logo.svg';\nimport polygonTestnetLogo from '../../../assets/polygon-testnet-logo.svg';\nimport ethLogo from '../../../assets/eth-logo.svg';\nimport avalLogo from '../../../assets/aval-logo.png';\nimport ethTestnetLogo from '../../../assets/eth-testnet-logo.svg';\nimport { IconContext } from \"react-icons\";\nimport { useEffect } from 'react';\n\nconst networks = {\n    bsc: {\n        fullName: 'Binance Smart Chain',\n        logo: bscLogo\n    },\n    polygon: {\n        fullName: 'Polygon',\n        logo: polygonLogo\n    },\n    eth: {\n        fullName: 'Ethereum',\n        logo: ethLogo\n    },\n    aval: {\n        fullName: 'Avalanche',\n        logo: avalLogo\n    },\n    'bsc-testnet': {\n        fullName: 'Testnet BSC',\n        logo: bscTestnetLogo\n    },\n    'polygon-testnet': {\n        fullName: 'Testnet Polygon',\n        logo: polygonTestnetLogo\n    },\n    'eth-testnet': {\n        fullName: 'Testnet Ethereum',\n        logo: ethTestnetLogo\n    },\n\n    'aval-testnet': {\n        fullName: 'Avalanche',\n        logo: avalLogo\n    }\n}\nconst ToolScreen = ({ title, children, icon, description }) => {\n    const { network } = useParams();\n    const networkData = networks[network];\n\n\n    if (!!network && !Object.keys(networks).includes(network)) {\n        return <Redirect to='/dashboard' />;\n    } else {\n        return (\n            <div className={classes.ToolScreen}>\n                <div className={classes.Children}>\n                    <div className={classes.ScreenDescription}>\n                        {description}\n                    </div>\n                    <div className={classes.Top}>\n\n                        <div className={classes.ScreenTitle}>\n                            <IconContext.Provider value={{ color: \"#fff\" }}>\n                                {icon}\n                            </IconContext.Provider>\n                            {title}\n                        </div>\n                        <div className={classes.Network}>\n                            on&nbsp;\n                            {networkData.fullName}\n                            <img src={networkData.logo} alt='Logo' />\n                        </div>\n                    </div>\n\n\n                    {children}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ToolScreen;","import aval from './data/aval.json';\nimport avalTestnet from './data/avalTestnet.json';\nimport bsc from './data/bsc.json';\nimport bscTestnet from './data/bscTestnet.json';\nimport eth from './data/eth.json';\nimport ethTestnet from './data/ethTestnet.json';\nimport polygon from './data/polygon.json';\nimport polygonTestnet from './data/polygonTestnet.json';\n\nconst networks = {\n    'aval': aval,\n    'aval-testnet': avalTestnet,\n    'bsc': bsc,\n    'bsc-testnet': bscTestnet,\n    'eth': eth,\n    'eth-testnet': ethTestnet,\n    'polygon': polygon,\n    'polygon-testnet': polygonTestnet\n}\n\nexport default networks;","import classes from './Button.module.css';\nimport { IconContext } from \"react-icons\";\n\nconst Button = ({ title, icon, onClick }) => (\n    <div className={classes.Button} onClick={onClick}>\n        <IconContext.Provider value={{ color: \"#fff\" }}>\n            {icon}\n        </IconContext.Provider>\n        <span>{title}</span>\n    </div>\n)\n\nexport default Button;","import { useEffect, useState } from 'react';\nimport PulsatingDot from '../ui/PulsatingDot/PulsatingDot';\nimport ToolScreen from '../ui/ToolScreen/ToolScreen';\nimport classes from './LiveLiquidity.module.css';\nimport networks from '../../networks';\nimport { useParams } from 'react-router';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport moment from 'moment';\nimport Button from '../ui/Button/Button';\nimport { IoMdSwap } from 'react-icons/io';\nimport { IoDocumentOutline, } from 'react-icons/io5';\nimport { MdShowChart } from 'react-icons/md';\nimport DocumentTitle from 'react-document-title';\n\nconst Token = ({ row, currency, color, onContract, onChart, onSwap }) => {\n    const [hovered, setHovered] = useState(false);\n\n    return (\n        <div className={classes.Token} onClick={() => setHovered(true)} onMouseLeave={() => setHovered(false)}>\n            <div className={[classes.OnHover, hovered && classes.Visible].join(' ')}>\n                <Button title='Contract' icon={<IoDocumentOutline />} onClick={() => onContract(hovered, row.tokenAddress)} />\n                <Button title='Chart' icon={<MdShowChart />} onClick={() => onChart(hovered, row.tokenAddress)} />\n                <Button title='Swap' icon={<IoMdSwap />} onClick={() => onSwap(hovered, row.tokenAddress)} />\n            </div>\n\n            <div className={classes.Created}>{moment(row.created).format('ddd HH:mm:ss')}</div>\n            <div className={classes.Name}>\n                {row.tokenName} ({row.tokenSymbol})\n            </div>\n            <div className={classes.Balance}>{Number(row.liquidity).toFixed(3)} <span style={{ color }}>{currency}</span></div>\n        </div>\n    )\n}\n\n\n\nconst LiveLiquidtity = () => {\n    const { network } = useParams();\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        setData([])\n        const fetchData = async () => {\n            const { data } = await axios.get(networks[network].livePairsUrl + '/last-pairs');\n            setData(data.reverse());\n        }\n\n        fetchData();\n\n        const socket = io(networks[network].livePairsUrl);\n\n        socket.on(\"newPair\", (newPair) => {\n            setData(old => [newPair].concat(old));\n        });\n\n        return () => socket.disconnect();\n    }, [network]);\n\n    const onContract = (run, tokenAddress) => {\n        if (!run) return;\n        const explorer = networks[network].blockExplorerUrls[0];\n        window.open(explorer + 'address/' + tokenAddress, '_blank').focus()\n    }\n\n    const onChart = (run, tokenAddress) => {\n        if (!run) return;\n        const chartsProvider = networks[network].chartsUrl;\n        window.open(chartsProvider + tokenAddress, '_blank').focus()\n    }\n\n    const onSwap = (run, tokenAddress) => {\n        if (!run) return;\n        const swapProvider = networks[network].swapUrl;\n        window.open(swapProvider + tokenAddress, '_blank').focus()\n    }\n\n    return (\n        <ToolScreen\n            title='Live Liquidity'\n            icon={<PulsatingDot size={24} style={{ marginRight: 6, marginLeft: 6 }} />}\n            description={\n                <>\n                    Explore recently created liquidities\n                    <br />\n                    and be first to react.\n                </>\n            }\n        >\n            <DocumentTitle title='Live Liquidity - TOKEN.app' />\n\n            <div className={classes.Liqs}>\n                {\n                    data.map(row => (\n                        <Token\n                            row={row}\n                            key={row.created}\n                            color={networks[network].color}\n                            currency={networks[network].nativeCurrency.symbol}\n                            onContract={onContract}\n                            onChart={onChart}\n                            onSwap={onSwap} />\n                    ))\n                }\n            </div>\n        </ToolScreen>\n    )\n}\n\nexport default LiveLiquidtity;\n\n\n","import classes from './Slider.module.css';\nimport ReactSlider from 'react-slider';\n\nconst Slider = ({ value, setValue, min = 1, max = 10 }) => (\n    <div className={classes.Slider}>\n\n        <ReactSlider\n            className=\"horizontal-slider\"\n            thumbClassName={classes.Thumb}\n            trackClassName={classes.Track}\n            onChange={(value, index) => setValue(value)}\n            value={value}\n            min={min}\n            max={max}\n            marks\n            renderThumb={(props, state) => <div {...props}>{state.valueNow}%</div>} />\n    </div>\n)\n\nexport default Slider;","import Slider from '../Slider/Slider';\nimport classes from './FormField.module.css';\n\nconst FormField = ({ type = 'string', value, setValue, label, placeholder, min = 1, max = 10 }) => {\n\n    const onChange = e => {\n        const newValue = e.target.value;\n        if (type === 'string' || type === 'slider') {\n            setValue(newValue);\n        } else if (type === 'number') {\n            if (!isNaN(newValue)) {\n                setValue(newValue)\n            }\n        }\n    }\n\n    const input = type === 'slider'\n        ? (\n            <Slider value={value} setValue={setValue} min={min} max={max} />\n        ) : (\n            <div className={classes.InputWrapper}>\n                <input\n                    className={classes.Input}\n                    placeholder={placeholder}\n                    value={value}\n                    onChange={onChange}\n                />\n            </div>\n        )\n\n    return (\n\n        <div className={classes.FormInput}>\n            <div className={classes.Label}>{label}</div>\n            {input}\n        </div>\n    )\n}\n\nexport default FormField;","import classes from './Card.module.css';\n\nconst Card = ({ title, children }) => (\n    <div className={classes.Card}>\n        {\n            title && <div className={classes.CardTitle}>{title}</div>\n        }\n        <div className={classes.CardBody}>\n            {children}\n\n        </div>\n    </div>\n)\n\nexport default Card;","import classes from './LoadingModal.module.css';\nimport Loader from \"react-loader-spinner\";\n\nconst LoadingModal = ({ display, title }) => {\n\n    if (!display) return null;\n\n    return (\n        <div className={classes.ModalWrapper}>\n            <div className={classes.Modal}>\n\n            </div>\n            <Loader\n                type=\"Bars\"\n                color=\"#22d49f\"\n                secondaryColor=\"#6046ff\"\n                height={86}\n                width={86}\n            />\n            <span className={classes.Title}>{title}</span>\n        </div>\n    )\n}\n\nexport default LoadingModal;","export default __webpack_public_path__ + \"static/media/SafeMoon.15cbb34a.sol\";","import axios from \"axios\"\nimport networks from '../networks';\nimport safeMoon from '../assets/contracts/tokens/safeMoon/SafeMoon.sol';\nimport safeMoonBytecode from '../assets/contracts/tokens/safeMoon/safeMoonBytecode.json';\n\nexport const verifyContract = async ({ network, contractAddress, contractSource, deployData, bytecode }) => {\n    await new Promise(r => setTimeout(r, 2_000));\n\n    const constructorArguements = deployData.replace(bytecode, '').replace('0x', '');\n    const { data } = await axios.get(contractSource);\n    const apiUrl = networks[network].apiUrl;\n    const apiKey = networks[network].apiKey;\n\n    let guid = null;\n    while (!guid) {\n        const postData = {\n            apiKey,\n            module: 'contract',                             //Do not change\n            action: 'verifysourcecode',                     //Do not change\n            contractAddress,   //Contract Address starts with 0x...     \n            sourceCode: data,             //Contract Source Code (Flattened if necessary)\n            codeformat: 'solidity-single-file',             //solidity-single-file (default) or solidity-standard-json-input (for std-input-json-format support\n            contractname: 'Token',         //ContractName (if codeformat=solidity-standard-json-input, then enter contractname as ex: erc20.sol:erc20)\n            compilerversion: 'v0.6.12+commit.27d51765',   // see https://bscscan.com/solcversions for list of support versions\n            optimizationUsed: 0, //0 = No Optimization, 1 = Optimization used (applicable when codeformat=solidity-single-file)\n            runs: 200,                                      //set to 200 as default unless otherwise  (applicable when codeformat=solidity-single-file)        \n            constructorArguements   //if applicable\n        }\n\n        const bodyFormData = new FormData();\n\n        Object.keys(postData).forEach(key => {\n            bodyFormData.append(key, postData[key]);\n        })\n\n        const res = await axios({\n            method: \"post\",\n            url: apiUrl,\n            data: bodyFormData,\n            headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n        })\n\n        if (res.data.status === '1') {\n            guid = res.data.result;\n        } else {\n            await new Promise(r => setTimeout(r, 20_000));\n        }\n        //const guid = res.data.result;\n    }\n\n\n    let isNotDone = true;\n    while (isNotDone) {\n        await new Promise(r => setTimeout(r, 5_000));\n\n        const checkData = new FormData();\n        checkData.append('apiKey', apiKey);\n        checkData.append('guid', guid);\n        checkData.append('module', 'contract');\n        checkData.append('action', 'checkverifystatus');\n\n        const { data: { result } } = await axios({\n            method: \"post\",\n            url: apiUrl,\n            data: checkData,\n            headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n        })\n        if (result !== 'Pending in queue') {\n            isNotDone = false;\n        }\n    }\n\n}\n\n\n\n\nexport const verifySafeMoon = async ({ network, contract }) => {\n    await verifyContract({\n        network,\n        contractAddress: contract.address,\n        contractSource: safeMoon,\n        deployData: contract.deployTransaction.data,\n        bytecode: safeMoonBytecode.object\n    });\n}","import { ContractFactory, providers } from 'ethers';\nimport safeMoonAbi from '../assets/contracts/tokens/safeMoon/safeMoonAbi.json';\nimport safeMoonBytecode from '../assets/contracts/tokens/safeMoon/safeMoonBytecode.json';\n\nexport const deployContract = async ({\n    abi,\n    bytecode,\n    args\n}) => {\n    const provider = new providers.Web3Provider(window.ethereum, \"any\");\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    const factory = new ContractFactory(abi, bytecode);\n    const connectedFactory = factory.connect(signer)\n    const contract = await connectedFactory.deploy(...args);\n    //const deployData = contract.deployTransaction.data;\n    await contract.deployTransaction.wait();\n\n    return contract;\n}\n\nexport const deploySafeMoon = async ({ router, name, symbol, liqFee, redFee }) => {\n    const contract = await deployContract({\n        abi: safeMoonAbi,\n        bytecode: safeMoonBytecode.object,\n        args: [router, name, symbol, Number(liqFee), Number(redFee)]\n    });\n\n    return contract;\n}\n","export default __webpack_public_path__ + \"static/media/metamask-logo.45038d58.svg\";","import networks from '../networks';\n\nconst getMetamaskNetworkParams = networkName => {\n    const networkObj = networks[networkName];\n\n    return {\n        chainId: networkObj.chainId,\n        chainName: networkObj.chainName,\n        nativeCurrency: networkObj.nativeCurrency,\n        rpcUrls: networkObj.rpcUrls,\n        blockExplorerUrls: networkObj.blockExplorerUrls\n    }\n}\n\nexport const changeNetwork = async (networkName) => {\n    try {\n        await window.ethereum.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{ chainId: networks[networkName].chainId }]\n        });\n    } catch (switchError) {\n        if (switchError.code === 4902) {\n            await window.ethereum.request({\n                method: 'wallet_addEthereumChain',\n                params: [getMetamaskNetworkParams(networkName)]\n            });\n        }\n    }\n}","import useWallet from 'use-wallet';\nimport Button from '../Button/Button';\nimport metamaskLogo from '../../../assets/metamask-logo.svg';\nimport { changeNetwork } from '../../../api/MetaMaskApi';\nimport networks from '../../../networks';\nimport { TiFlowSwitch } from 'react-icons/ti';\n\nconst NetworkSensitiveButton = ({ title, icon, targetNetwork, onClick }) => {\n    const { account, chainId, connect } = useWallet();\n\n\n    if (!account) {\n        return (\n            <Button title='Connect MetaMask!' icon={<img src={metamaskLogo} alt='Logo' />} onClick={() => connect()} />\n        )\n    }\n\n    const currentNetwork = Object.values(networks).find(n => Number(n.chainId) === chainId);\n    const targetNetworkName = Object.values(networks).find(n => n.symbol === targetNetwork);\n\n    if (currentNetwork.symbol !== targetNetwork) {\n        return (\n            <Button icon={<TiFlowSwitch />} title={`Switch Network to ${targetNetworkName.chainName}!`} onClick={() => changeNetwork(targetNetwork)} />\n        )\n    }\n\n    return (\n        <Button title={title} icon={icon} onClick={onClick} />\n    )\n}\n\nexport default NetworkSensitiveButton;","import Button from '../Button/Button';\nimport classes from './Modal.module.css';\n\nconst Modal = ({ display, title, body, description, buttonTitle, buttonIcon, buttonOnClick }) => {\n\n    if (!display) {\n        return null;\n    }\n\n    return (\n        <div className={classes.ModalWrapper}>\n            <div className={classes.Modal}>\n                <div className={classes.Top}>\n                    <span className={classes.Title}>{title}</span>\n                </div>\n                <div className={classes.Body}>\n                    <span className={classes.Description}>\n                        {description}\n\n                    </span>\n                    <div className={classes.ButtonContainer}>\n                        <Button title={buttonTitle} icon={buttonIcon} onClick={buttonOnClick} />\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Modal;","import { useState } from 'react';\nimport { GrDeploy, GrDocument } from 'react-icons/gr';\nimport ToolScreen from '../ui/ToolScreen/ToolScreen';\nimport classes from './DeployNewToken.module.css';\nimport FormField from '../ui/FormField/FormField';\nimport Card from '../ui/Card/Card';\nimport LoadingModal from '../ui/LoadingModal/LoadingModal';\nimport networks from '../../networks';\nimport { useParams } from 'react-router';\nimport { verifySafeMoon } from \"../../api/BscScanApi\";\nimport { deploySafeMoon } from \"../../api/BlochainApi\";\nimport NetworkSensitiveButton from '../ui/NetworkSensitiveButton/NetworkSensitiveButton';\nimport Modal from '../ui/Modal/Modal';\nimport DocumentTitle from 'react-document-title';\n\nconst DeployNewToken = () => {\n    const { network } = useParams();\n    const [name, setName] = useState('');\n    const [symbol, setSymbol] = useState('');\n    const [liqFee, setLiqFee] = useState(4);\n    const [redFee, setRedFee] = useState(4);\n    const [createdAddress, setCreatedAddress] = useState('');\n    const [loadingMessage, setLoadingMessage] = useState();\n\n    const onDeploy = async () => {\n        try {\n            setLoadingMessage('DEPLOYING');\n            const router = networks[network].routerAddress;\n            const contract = await deploySafeMoon({ router, name, symbol, liqFee, redFee });\n            setLoadingMessage('VERIFYING');\n            await verifySafeMoon({ network, contract });\n            setCreatedAddress(contract.address);\n            setLoadingMessage();\n        } catch (e) {\n            setLoadingMessage();\n        }\n\n    }\n\n    const onSeeContract = () => {\n        const explorer = networks[network].blockExplorerUrls[0];\n        window.open(explorer + 'address/' + createdAddress, '_blank').focus()\n    }\n\n    return (\n        <ToolScreen\n            title='Deploy Token'\n            icon={<GrDeploy />}\n            description={\n                <>\n                    Deploy your own SafeMoon fork\n                    <br />\n                    and become an owner.\n                </>\n            }>\n            <DocumentTitle title='Deploy Token - TOKEN.app' />\n\n            <LoadingModal title={loadingMessage} display={!!loadingMessage} />\n            <Modal\n                title='Token Deployed Succesfully!'\n                display={!!createdAddress}\n                description={`Token has been  deployed and verified.`}\n                buttonTitle={'See Contract!'}\n                buttonIcon={<GrDocument />}\n                buttonOnClick={onSeeContract}\n            />\n            <div className={classes.DeployNewToken}>\n\n                <Card title='Provide Token Details'>\n                    <FormField\n                        label='Token Name'\n                        placeholder='My Awesome Token'\n                        value={name}\n                        setValue={setName} />\n\n                    <FormField\n                        label='Token Symbol'\n                        placeholder='MAT'\n                        value={symbol}\n                        setValue={setSymbol} />\n\n                    <FormField\n                        label='Liquidity Fee'\n                        type='slider'\n                        value={liqFee}\n                        setValue={setLiqFee} />\n\n                    <FormField\n                        label='Redistribution Fee'\n                        type='slider'\n                        value={redFee}\n                        setValue={setRedFee} />\n                </Card>\n                <div className={classes.ButtonContainer}>\n                    <NetworkSensitiveButton\n                        title='Deploy!'\n                        icon={<GrDeploy />}\n                        targetNetwork={network}\n                        onClick={onDeploy} />\n                </div>\n            </div>\n\n        </ToolScreen >\n    )\n}\n\nexport default DeployNewToken;\n\n\n/*\n1. Mega zestaw/zwiazek utilities\n2. Goal: Dominate the market\n3. Avaible Tools\n4. Supported Chains\n5. Project currently working on\n*/","import classes from './NetworkButton.module.css';\n\n\nconst NetworkButton = ({ fullName, logo, size = 'large', selected, onClick }) => {\n\n    return (\n        <div onClick={onClick} className={[classes.ButtonWrapper, selected ? classes.Selected : null].join(' ')} >\n            <div className={[classes.Button, size === 'large' ? classes.Big : classes.Small].join(' ')}>\n                <img src={logo} alt={fullName} />\n            </div>\n        </div>\n    )\n}\n\nexport default NetworkButton;","import bscLogo from '../../../../assets/bsc-logo.svg';\nimport bscTestnetLogo from '../../../../assets/bsc-testnet-logo.svg';\nimport polygonLogo from '../../../../assets/polygon-logo.svg';\nimport polygonTestnetLogo from '../../../../assets/polygon-testnet-logo.svg';\nimport ethLogo from '../../../../assets/eth-logo.svg';\nimport avalLogo from '../../../../assets/aval-logo.png';\nimport ethTestnetLogo from '../../../../assets/eth-testnet-logo.svg';\nimport networks from '../../../../networks';\n\nexport const mainnets = {\n    bsc: {\n        fullName: 'Binance Smart Chain',\n        icon: bscLogo,\n        url: '/bsc/live-liquidity'\n    },\n    polygon: {\n        fullName: 'Polygon',\n        icon: polygonLogo,\n        url: '/polygon/live-liquidity'\n    },\n    eth: {\n        fullName: 'Ethereum',\n        icon: ethLogo,\n        url: '/eth/live-liquidity'\n    }\n}\n\nexport const testnets = {\n    'bsc-testnet': {\n        fullName: ' Binance Smart Chain - Testnet',\n        icon: bscTestnetLogo,\n        url: '/bsc-testnet/live-liquidity'\n    },\n    'polygon-testnet': {\n        fullName: 'Polygon - Testnet',\n        icon: polygonTestnetLogo,\n        url: '/polygon-testnet/live-liquidity'\n    },\n    'eth-testnet': {\n        fullName: 'Ethereum - Testnet',\n        icon: ethTestnetLogo,\n        url: '/eth-testnet/live-liquidity'\n    }\n}\n\n\nexport const getMetamaskNetworkParams = networkName => {\n    const networkObj = networks[networkName];\n\n    return {\n        chainId: networkObj.chainId,\n        chainName: networkObj.chainName,\n        nativeCurrency: networkObj.nativeCurrency,\n        rpcUrls: networkObj.rpcUrls,\n        blockExplorerUrls: networkObj.blockExplorerUrls\n    }\n}","\nimport classes from './NetworkSwitcher.module.css';\nimport NetworkButton from './NetworkButton/NetworkButton';\nimport networks from '../../../../networks';\nimport { mainnets, testnets, getMetamaskNetworkParams } from './networkSwitcherHelper';\n\nconst NetworkSwitcher = ({ network }) => {\n    const onNetworkChange = async (networkName) => {\n        try {\n            await window.ethereum.request({\n                method: 'wallet_switchEthereumChain',\n                params: [{ chainId: networks[networkName].chainId }]\n            });\n        } catch (switchError) {\n            if (switchError.code === 4902) {\n                await window.ethereum.request({\n                    method: 'wallet_addEthereumChain',\n                    params: [getMetamaskNetworkParams(networkName)]\n                });\n            }\n        }\n    }\n\n    const onButtonClick = async (networkSymbol, networkUrl) => {\n        try {\n            await onNetworkChange(networkSymbol);\n        } catch (e) {\n        }\n    }\n\n    return (\n        <div className={classes.NetworkSwitcher}>\n            <div className={classes.Nets}>\n                {\n                    Object.keys(mainnets).map((n, index) => (\n\n                        <NetworkButton\n                            key={index}\n                            selected={network === n}\n                            onClick={() => onButtonClick(n, mainnets[n].url)}\n                            fullName={mainnets[n].fullName}\n                            logo={mainnets[n].icon} />\n\n\n                    ))\n                }\n            </div>\n            <div className={classes.Nets}>\n                {\n                    Object.keys(testnets).map((n, index) => (\n                        <NetworkButton\n                            key={index}\n                            selected={network === n}\n                            onClick={() => onButtonClick(n, testnets[n].url)}\n                            fullName={testnets[n].fullName}\n                            logo={testnets[n].icon} />\n                    ))\n                }\n            </div>\n        </div>\n    )\n\n}\n\nexport default NetworkSwitcher;","import classes from './Wallet.module.css';\nimport networks from '../../../networks';\nimport metamaskLogo from '../../../assets/metamask-logo.svg';\nimport useWallet from 'use-wallet';\nimport { useEffect, useState } from 'react';\nimport bscLogo from '../../../assets/bsc-logo.svg';\nimport bscTestnetLogo from '../../../assets/bsc-testnet-logo.svg';\nimport polygonLogo from '../../../assets/polygon-logo.svg';\nimport polygonTestnetLogo from '../../../assets/polygon-testnet-logo.svg';\nimport ethLogo from '../../../assets/eth-logo.svg';\nimport avalLogo from '../../../assets/aval-logo.png';\nimport ethTestnetLogo from '../../../assets/eth-testnet-logo.svg';\nimport NetworkSwitcher from './NetworkSwitcher/NetworkSwitcher';\nimport NetworkButton from './NetworkSwitcher/NetworkButton/NetworkButton';\nimport Button from '../../ui/Button/Button';\n\nconst networksIcons = {\n    bsc: bscLogo,\n    polygon: polygonLogo,\n    eth: ethLogo,\n    aval: avalLogo,\n    'bsc-testnet': bscTestnetLogo,\n    'polygon-testnet': polygonTestnetLogo,\n    'eth-testnet': ethTestnetLogo,\n    'aval-testnet': avalLogo\n}\n\nconst Wallet = () => {\n    const { connect, account, balance, chainId } = useWallet();\n    const [currNetwork, setCurrNetwork] = useState({});\n    const [opened, setOpened] = useState(false);\n\n    useEffect(() => {\n        try {\n            if (localStorage.getItem('walletConnected') === 'true') {\n                connect();\n            }\n        } catch (e) { }\n    }, []);\n\n    useEffect(() => {\n        if (!chainId) return;\n        const network = Object.values(networks).find(n => Number(n.chainId) === chainId);\n        setCurrNetwork({\n            symbol: network.symbol,\n            fullName: networks[network.symbol].chainName,\n            logo: networksIcons[network.symbol],\n            color: networks[network.symbol].color,\n            currency: networks[network.symbol].nativeCurrency.symbol\n        })\n    }, [chainId])\n\n    const onConnect = async () => {\n        try {\n            await connect();\n            localStorage.setItem('walletConnected', 'true');\n        } catch (e) { }\n    }\n\n    if (!account) {\n        return (\n            <div className={classes.Wallet}>\n                <Button title='Connect MetaMask!' icon={<img src={metamaskLogo} alt='MetaMask Logo' />} onClick={onConnect} />\n            </div>\n        )\n    }\n\n    return (\n        <div className={classes.Wallet}>\n            <div className={classes.Left}>\n                <div className={classes.Account}>\n                    <div className={classes.Address}>{account.substring(0, 6)}..{account.slice(-4)}</div>\n                    <div className={classes.Balance}>\n                        <span className={classes.Number}>{(balance / 10 ** 18).toFixed(4)}</span>\n                        <span style={{ fontWeight: 500, color: currNetwork.color }}>{currNetwork.currency}</span>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.Right}>\n                <NetworkButton logo={currNetwork.logo} selected={true} onClick={() => setOpened(old => !old)} />\n                <div className={[classes.NetworkSwitcher, opened && classes.Opened].join(' ')}>\n                    <div className={classes.LeftContainer}>\n                        <div className={classes.Rounder} />\n                    </div>\n                    <div className={classes.SwitcherContainer} onClick={() => setOpened(old => !old)}>\n                        <NetworkSwitcher network={currNetwork.symbol} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n\n}\n\nexport default Wallet;","import classes from './Prices.module.css';\n\nimport bscLogo from '../../../assets/bsc-logo.svg';\nimport polygonLogo from '../../../assets/polygon-logo.svg';\nimport ethLogo from '../../../assets/eth-logo.svg';\nimport networks from '../../../networks';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst displayNetworks = [\n    {\n        symbol: 'bsc',\n        logo: bscLogo,\n        apiSymbol: 'ethusd'\n    },\n    {\n        symbol: 'polygon',\n        logo: polygonLogo,\n        apiSymbol: 'maticusd'\n\n    },\n    {\n        symbol: 'eth',\n        logo: ethLogo,\n        apiSymbol: 'ethusd'\n    }\n]\n\n\nconst Prices = () => {\n    const [prices, setPrices] = useState([300, 200, 123]);\n\n    useEffect(() => {\n        const pricesFromStorage = JSON.parse(localStorage.getItem('prices') || '[0,0,0]');\n\n        setPrices(pricesFromStorage);\n\n        const fetchPrices = async () => {\n            let fetchedPrices = [];\n            let i = 0;\n            for await (const n of displayNetworks) {\n                try {\n                    const apiUrl = networks[n.symbol].apiUrl;\n                    const wethSymbol = networks[n.symbol].nativeCurrency.symbol.toLowerCase();\n                    const url = apiUrl + `?module=stats&action=${wethSymbol}price`;\n                    const { data: { status, result } } = await axios.get(url);\n                    if (status !== \"1\") {\n                        throw new Error('Error');\n                    }\n                    fetchedPrices[i] = Number(result[n.apiSymbol]);\n                } catch (e) {\n                    fetchedPrices[i] = -1;\n                }\n                i++;\n            }\n            setPrices(oldPrices => {\n                const newPrices = [];\n                oldPrices.forEach((op, index) => {\n                    newPrices[index] = fetchedPrices[index] === -1 ? op : fetchedPrices[index];\n                });\n                localStorage.setItem('prices', JSON.stringify(newPrices));\n                return newPrices;\n            });\n\n        }\n\n        fetchPrices();\n\n        const interval = setInterval(fetchPrices, 60_000);\n\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <div className={classes.Prices}>\n            {\n                displayNetworks.map((net, index) => (\n                    <div className={classes.Price} key={index}>\n                        <img src={net.logo} className={classes.Logo} alt='Logo' />\n                        <span className={classes.Number} style={{ color: networks[net.symbol].color }}>{prices[index].toFixed(2)}$</span>\n                    </div>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Prices;","import classes from './TopBar.module.css';\nimport Wallet from './Wallet/Wallet';\nimport Logo from '../../assets/logo.svg';\nimport Prices from './Prices/Prices';\nimport { useHistory } from 'react-router';\n\nconst TopBar = () => {\n    const history = useHistory();\n\n    const onLogoClick = () => {\n        history.push('/dashboard')\n    }\n\n    return (\n        <div className={classes.TopBarWrapper}>\n            <div className={classes.TopBar}>\n                <div className={classes.Logo} onClick={onLogoClick}>\n                    <img src={Logo} />\n                    <span>\n                        <span className={classes.Left}>TOQEN.</span>\n                        <span className={classes.Right}>app</span>\n                    </span>\n                </div>\n\n                <Prices />\n\n                <div className={classes.WalletContainer}>\n                    <Wallet />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TopBar;","import { GrGift } from 'react-icons/gr';\nimport ToolScreen from '../ui/ToolScreen/ToolScreen';\nimport Card from '../ui/Card/Card';\nimport FormField from '../ui/FormField/FormField';\nimport classes from './AirdropTokens.module.css';\nimport Button from '../ui/Button/Button';\nimport { useState } from 'react';\nimport DocumentTitle from 'react-document-title';\n\nconst AirdropTokens = () => {\n    const [tokenAddress, setTokenAddress] = useState('');\n    const [tokenLogo, setTokenLogo] = useState('')\n    const [tokenWebsite, setTokenWebsite] = useState('');\n    const [tokenMotto, setTokenMotto] = useState('');\n\n    const onCreate = () => {\n\n    }\n\n    return (\n        <ToolScreen\n            title='Airdrop Tokens'\n            icon={<GrGift />}\n            description={\n                <>\n                    Spread the word about your token\n                    <br />\n                    and give to those interested.\n                </>\n            }\n        >\n            <DocumentTitle title='Airdrop Tokens - TOKEN.app' />\n\n            <Card title='Provide Airdrop Details'>\n                <FormField\n                    label='Token Address'\n                    placeholder='0x0b8EA313Afd6fC11BC55FD...'\n                    value={tokenAddress}\n                    setValue={setTokenAddress}\n                />\n                <FormField\n                    label='Token Logo'\n                    placeholder='https://example.com/logo.jpg'\n                    value={tokenLogo}\n                    setValue={setTokenLogo}\n                />\n                <FormField\n                    label='Token Website'\n                    placeholder='https://token-website.com'\n                    value={tokenWebsite}\n                    setValue={setTokenWebsite}\n                />\n                <FormField\n                    label='Token Motto'\n                    placeholder='Designed to amaze.'\n                    value={tokenMotto}\n                    setValue={setTokenMotto}\n                />\n            </Card>\n            <div className={classes.ButtonContainer}>\n                <Button title='Create Airdrop!' icon={<GrGift />} onClick={onCreate} />\n            </div>\n\n        </ToolScreen>\n    )\n}\n\nexport default AirdropTokens;","import { UseWalletProvider } from \"use-wallet\";\nimport Menu from \"./components2/Menu/Menu\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\nimport LiveLiquidtity from \"./components2/LiveLiquidity/LiveLiquidity\";\nimport DeployNewToken from \"./components2/DeployNewToken/DelpoyNewToken\";\nimport classes from './App2.module.css';\nimport TopBar from \"./components2/TopBar/TopBar\";\nimport AirdropTokens from \"./components2/AirdropTokens/AirdropTokens\";\n\nconst App = () => {\n    return (\n        <UseWalletProvider chainId={1}>\n            <Router>\n                <Switch>\n                    <div className={classes.App}>\n                        <TopBar />\n                        <Switch>\n                            <Route path='/:network'>\n                                <div className={classes.Container}>\n\n                                    <Menu />\n                                    <div style={{ overflow: 'scroll' }}>\n                                        <Route path='/:network/live-liquidity' component={LiveLiquidtity} />\n                                        <Route path='/:network/deploy-token' component={DeployNewToken} />\n                                        <Route path='/:network/airdrop-tokens' component={AirdropTokens} />\n                                        <Route path='/' exact>\n                                            <Redirect to='/dashboard' />\n                                        </Route>\n                                    </div>\n                                </div>\n                            </Route>\n                        </Switch>\n                    </div>\n                </Switch>\n            </Router>\n        </UseWalletProvider >\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App2';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wallet\":\"Wallet_Wallet__1KhJe\",\"Address\":\"Wallet_Address__34q-f\",\"Account\":\"Wallet_Account__KXXCI\",\"Balance\":\"Wallet_Balance__bEtdv\",\"NetworkLogo\":\"Wallet_NetworkLogo__v4cL7\",\"Right\":\"Wallet_Right__3mfsD\",\"NetworkSwitcher\":\"Wallet_NetworkSwitcher__1jSxg\",\"Opened\":\"Wallet_Opened__nA4BZ\",\"SwitcherContainer\":\"Wallet_SwitcherContainer__10pbM\",\"LeftContainer\":\"Wallet_LeftContainer__J3fJz\",\"Rounder\":\"Wallet_Rounder__3NZbr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Network\":\"NetworkMenu_Network__3M1Os\",\"Opened\":\"NetworkMenu_Opened__1GTAb\",\"NetworkItems\":\"NetworkMenu_NetworkItems__1FlBQ\",\"NetworkName\":\"NetworkMenu_NetworkName__fQv9M\",\"Chevron\":\"NetworkMenu_Chevron__2Jqpx\",\"NetworkLogo\":\"NetworkMenu_NetworkLogo__3lDzV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ScreenTitle\":\"LiveLiquidity_ScreenTitle__36rXY\",\"Liqs\":\"LiveLiquidity_Liqs__2vhMn\",\"Token\":\"LiveLiquidity_Token__3-AKi\",\"OnHover\":\"LiveLiquidity_OnHover__2o-Bz\",\"Visible\":\"LiveLiquidity_Visible__28b3Y\",\"IconButton\":\"LiveLiquidity_IconButton__2jLaE\",\"Name\":\"LiveLiquidity_Name__1isfe\",\"Balance\":\"LiveLiquidity_Balance__1mU3t\",\"Created\":\"LiveLiquidity_Created__340dt\",\"Header\":\"LiveLiquidity_Header__3tTKQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalWrapper\":\"Modal_ModalWrapper__2DpB2\",\"Modal\":\"Modal_Modal__2fJR1\",\"Top\":\"Modal_Top__3vAb6\",\"Title\":\"Modal_Title__2kmbl\",\"Description\":\"Modal_Description__11u9H\",\"ButtonContainer\":\"Modal_ButtonContainer__qOV90\",\"Body\":\"Modal_Body__2Vm-f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToolScreen\":\"ToolScreen_ToolScreen__3jnoV\",\"Top\":\"ToolScreen_Top__3_UxM\",\"ScreenTitle\":\"ToolScreen_ScreenTitle__2Fg1Q\",\"ScreenDescription\":\"ToolScreen_ScreenDescription__2kDUk\",\"On\":\"ToolScreen_On__PikJE\",\"Network\":\"ToolScreen_Network__hfKrU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TopBarWrapper\":\"TopBar_TopBarWrapper__1xB65\",\"TopBar\":\"TopBar_TopBar__2mouT\",\"Logo\":\"TopBar_Logo__3L7Mm\",\"Left\":\"TopBar_Left__2-3IY\",\"Right\":\"TopBar_Right__3WZdZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Menu_Menu__34HvO\",\"SubMenu\":\"Menu_SubMenu__2KQRJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonWrapper\":\"NetworkButton_ButtonWrapper__36O6T\",\"Selected\":\"NetworkButton_Selected__3Kx5G\",\"Button\":\"NetworkButton_Button__LYIQN\",\"Big\":\"NetworkButton_Big__2NOuZ\",\"Animation\":\"NetworkButton_Animation__2G8zt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuItem\":\"MenuItem_MenuItem__vokl8\",\"ItemDisabled\":\"MenuItem_ItemDisabled__1uXnU\",\"Selected\":\"MenuItem_Selected__2c2jS\",\"ItemIcon\":\"MenuItem_ItemIcon__1cJE0\",\"ItemName\":\"MenuItem_ItemName__3hZ8j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"FormField_Label__2tYqE\",\"InputWrapper\":\"FormField_InputWrapper__1EbdZ\",\"Animation\":\"FormField_Animation__nCwFH\",\"Input\":\"FormField_Input__220sf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Prices\":\"Prices_Prices__M4Rf5\",\"Price\":\"Prices_Price__3XVLp\",\"Number\":\"Prices_Number__3x7sM\",\"Logo\":\"Prices_Logo__3Doxd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Slider\":\"Slider_Slider__1MXXY\",\"Thumb\":\"Slider_Thumb__2q2Ok\",\"Track\":\"Slider_Track__2Nxgb\",\"Mark\":\"Slider_Mark__3uEzY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__2XhQp\",\"CardTitle\":\"Card_CardTitle__1dKz2\",\"CardBody\":\"Card_CardBody__3djG9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalWrapper\":\"LoadingModal_ModalWrapper__28Mc_\",\"Modal\":\"LoadingModal_Modal__2pn90\",\"Top\":\"LoadingModal_Top__5anQr\",\"Title\":\"LoadingModal_Title__C_JUk\",\"Body\":\"LoadingModal_Body__1RXZY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NetworkSwitcher\":\"NetworkSwitcher_NetworkSwitcher__ESeY9\",\"Nets\":\"NetworkSwitcher_Nets__31j6Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"DeployNewToken_Container__2l4Aj\",\"Title\":\"DeployNewToken_Title__1jWOe\",\"ButtonContainer\":\"DeployNewToken_ButtonContainer__J1DaI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App2_App__6nP-T\",\"Container\":\"App2_Container__31CxI\"};"],"sourceRoot":""}